name: Auto Process Rules
on:
  push:
    paths:
      - 'rules/*.list'
    branches: [ "main" ]
  workflow_dispatch:

env:
  PYTHON_SCRIPT: ".github/scripts/process_rules.py"

jobs:
  process-rules:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Process rule files
        id: process-rules
        run: |
          python ${{ env.PYTHON_SCRIPT }} --rules-dir rules --output-dir .
          if [ $? -eq 0 ]; then
            echo "process_success=true" >> $GITHUB_OUTPUT
          else
            echo "process_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Check for changes
        id: check-changes
        run: |
          git add rules/ json/ 2>/dev/null || true
          if git diff --staged --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            rules_count=$(find rules -name "*.list" -type f 2>/dev/null | wc -l)
            json_count=$(find json -name "*.json" -type f 2>/dev/null | wc -l)
            echo "rules_count=$rules_count" >> $GITHUB_OUTPUT
            echo "json_count=$json_count" >> $GITHUB_OUTPUT
            changed_files=$(git diff --staged --name-only | grep -E '\.(list|json)$' | wc -l)
            echo "changed_files=$changed_files" >> $GITHUB_OUTPUT
            rule_names=$(find rules -name "*.list" -type f -exec basename {} .list \; | sort | tr '\n' ' ')
            echo "rule_names=$rule_names" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git pull --rebase --autostash origin main || true
          commit_msg="🤖 Auto-process: Update rule files
          📊 Processing Summary:
          - Rules: ${{ steps.check-changes.outputs.rules_count }} files (processed in rules/)
          - JSON configs: ${{ steps.check-changes.outputs.json_count }} files
          - Total changes: ${{ steps.check-changes.outputs.changed_files }} files
          📝 Rule sets: ${{ steps.check-changes.outputs.rule_names }}
          📁 Directory structure:
          - rules/ → Processed .list files
          - json/  → Generated JSON configs"
          git commit -m "$commit_msg"
          max_retries=3
          retry_count=0
          while [ $retry_count -lt $max_retries ]; do
            if git push origin main; then
              echo "✅ Push successful"
              break
            else
              retry_count=$((retry_count + 1))
              echo "❌ Push failed, retrying... ($retry_count/$max_retries)"
              if [ $retry_count -lt $max_retries ]; then
                sleep $((retry_count * 2))
                git pull --rebase --autostash origin main || true
              fi
            fi
          done
          if [ $retry_count -eq $max_retries ]; then
            echo "💥 Push failed after $max_retries attempts"
            exit 1
          fi

      - name: Create processing summary
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "## 🎯 Rule Processing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 File Statistics:" >> $GITHUB_STEP_SUMMARY
          echo "| Type | Count | Description |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Rules** | ${{ steps.check-changes.outputs.rules_count }} | Processed .list files |" >> $GITHUB_STEP_SUMMARY
          echo "| **JSON** | ${{ steps.check-changes.outputs.json_count }} | Generated JSON configs |" >> $GITHUB_STEP_SUMMARY
          echo "| **Total** | ${{ steps.check-changes.outputs.changed_files }} | Files changed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 Directory Structure:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "repository/" >> $GITHUB_STEP_SUMMARY
          echo "├── rules/            # Processed rule files" >> $GITHUB_STEP_SUMMARY
          echo "└── json/             # Generated JSON configs" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Usage Examples:" >> $GITHUB_STEP_SUMMARY
          echo "- **Clash/Surge**: \`https://raw.githubusercontent.com/user/repo/main/rules/{name}.list\`" >> $GITHUB_STEP_SUMMARY
          echo "- **JSON Config**: \`https://raw.githubusercontent.com/user/repo/main/json/{name}.json\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Processed Rule Sets:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.check-changes.outputs.rule_names }}" | tr ' ' '\n' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY

      - name: Cleanup
        if: always()
        run: |
          rm -rf .cache/ 2>/dev/null || true
name: Auto Process Rules
on:
  push:
    paths:
      - '*.list'
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  process-rules:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
    env:
      PYTHON_SCRIPT_PATH: ".github/scripts/process_rules.py"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Get latest Sing-box version
        id: get_version
        run: |
          LATEST_VERSION=$(curl -sfL "https://api.github.com/repos/SagerNet/sing-box/releases/latest" | jq -r '.tag_name')
          CLEAN_VERSION=${LATEST_VERSION#v}
          echo "sing_box_version=$CLEAN_VERSION" >> $GITHUB_OUTPUT
          echo "full_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Process all .list files
        run: |
          python ${{ env.PYTHON_SCRIPT_PATH }} .
      
      - name: Create Sing-box bin directory
        run: mkdir -p sing-box-bin
      
      - name: Cache Sing-box
        id: cache-sing-box
        uses: actions/cache@v3
        with:
          path: sing-box-bin
          key: sing-box-${{ steps.get_version.outputs.full_version }}-linux-amd64
      
      - name: Download and prepare Sing-box
        if: steps.cache-sing-box.outputs.cache-hit != 'true'
        run: |
          wget -qO sing-box.tar.gz "https://github.com/SagerNet/sing-box/releases/download/${{ steps.get_version.outputs.full_version }}/sing-box-${{ steps.get_version.outputs.sing_box_version }}-linux-amd64.tar.gz"
          tar -xzf sing-box.tar.gz
          mv sing-box-*/sing-box sing-box-bin/
          chmod +x sing-box-bin/sing-box
          echo "$GITHUB_WORKSPACE/sing-box-bin" >> $GITHUB_PATH
      
      - name: Ensure Sing-box in PATH if cached
        if: steps.cache-sing-box.outputs.cache-hit == 'true'
        run: |
          echo "$GITHUB_WORKSPACE/sing-box-bin" >> $GITHUB_PATH
          chmod +x sing-box-bin/sing-box
      
      - name: Compile all JSON files to SRS
        run: |
          for json_file in *.json; do
            if [ -f "$json_file" ]; then
              base_name=$(basename "$json_file" .json)
              srs_file="${base_name}.srs"
              echo "Compiling $json_file to $srs_file"
              sing-box rule-set compile --output "$srs_file" "$json_file"
              if [ ! -f "$srs_file" ]; then
                echo "Error: Failed to create $srs_file"
                exit 1
              fi
            fi
          done
      
      - name: Get changed files
        id: changed-files
        run: |
          git add -A
          CHANGED_FILES=$(git diff --cached --name-only | grep -E '\.(list|json|srs)$' | tr '\n' ' ')
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "Changed files: $CHANGED_FILES"
      
      - name: Commit changes
        if: steps.changed-files.outputs.changed_files != ''
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          
          git pull --rebase --autostash --quiet
          git commit -m "ðŸ¤– Auto-process: Update rule files"
          
          retry_count=0
          max_retries=3
          retry_delay=5
          until git push origin main; do
            ((retry_count++))
            if [ $retry_count -ge $max_retries ]; then
              echo "Push failed after $max_retries attempts."
              exit 1
            fi
            echo "Push failed. Retrying in $retry_delay seconds..."
            sleep $retry_delay
            git pull --rebase --autostash --quiet
          done
          echo "Push successful."
      
      - name: Cleanup downloaded files
        if: always()
        run: rm -rf sing-box.tar.gz sing-box-*/

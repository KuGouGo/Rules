name: Rules Converter

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  convert-rules:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: src
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip jq curl
          pip3 install pyyaml
          
          # Debug GitHub API rate limiting
          echo "Checking GitHub API rate limit status:"
          curl -s https://api.github.com/rate_limit
          
          # Improved mihomo download with better debugging
          MAX_RETRIES=3
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempting to download mihomo (attempt $i of $MAX_RETRIES)"
            
            # Get release information with detailed error output
            RELEASE_INFO=$(curl -sL https://api.github.com/repos/MetaCubeX/mihomo/releases/latest)
            if [ $? -ne 0 ]; then
              echo "Failed to fetch release information"
              echo "Release API response: $RELEASE_INFO"
              sleep 5
              continue
            fi
            
            # Debug release information
            echo "Latest release information:"
            echo "$RELEASE_INFO" | jq -r '. | {tag_name, assets_url}'
            
            latest_url=$(echo "$RELEASE_INFO" | jq -r '.assets[] | select(.name | test("mihomo-linux-amd64.*.gz$")) | .browser_download_url')
            
            if [ -z "$latest_url" ]; then
              echo "Failed to get download URL from release assets"
              echo "Available assets:"
              echo "$RELEASE_INFO" | jq -r '.assets[] | .name'
              sleep 5
              continue
            fi
            
            echo "Downloading from URL: $latest_url"
            
            # Download with curl verbose output
            if curl -vfL "$latest_url" -o mihomo.gz 2>curl_error.log; then
              echo "Download completed, checking file..."
              
              # Check file size
              size=$(stat -f%z mihomo.gz 2>/dev/null || stat -c%s mihomo.gz 2>/dev/null)
              echo "Downloaded file size: $size bytes"
              
              # Verify gzip file integrity
              if gzip -t mihomo.gz 2>gzip_error.log; then
                echo "Gzip integrity check passed"
                gzip -d mihomo.gz
                if [ -f mihomo ] && [ -s mihomo ]; then
                  chmod +x mihomo
                  sudo mv mihomo /usr/local/bin/
                  echo "Successfully installed mihomo"
                  break
                else
                  echo "Decompressed file is missing or empty"
                fi
              else
                echo "Gzip integrity check failed"
                cat gzip_error.log
                rm -f mihomo.gz mihomo gzip_error.log
              fi
            else
              echo "Download failed. Curl error log:"
              cat curl_error.log
              rm -f curl_error.log
            fi
            
            if [ $i -eq $MAX_RETRIES ]; then
              echo "::error::Failed to download and install mihomo after $MAX_RETRIES attempts"
              echo "Final attempt details:"
              echo "Release URL: https://api.github.com/repos/MetaCubeX/mihomo/releases/latest"
              echo "Download URL: $latest_url"
              echo "Current directory contents:"
              ls -la
              exit 1
            fi
            
            sleep 5
          done
          
          mkdir -p src/{ipcidr,domain}

      # Rest of the workflow remains the same...
